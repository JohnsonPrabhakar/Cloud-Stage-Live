
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    function isRole(role) {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    // Public Collections
    match /events/{eventId} {
      allow read: if true;
      allow write: if isRole('admin') || (isRole('artist') && request.resource.data.artistId == request.auth.uid);
    }
    match /movies/{movieId} {
      allow read: if true;
      allow write: if isRole('admin');
    }

    // Protected Collections
    match /users/{userId} {
      allow read: if isAuth();
      // Allow user to update their own profile, and allow admin to update any user profile
      allow update: if isOwner(userId) || isRole('admin');
      allow create: if true; // Allow creation during signup for any user
      allow delete: if isRole('admin');
    }

    match /artistApplications/{appId} {
      allow read: if isRole('admin');
      allow create: if true; // Open for anyone to apply
      allow update, delete: if isRole('admin');
    }

    match /tickets/{ticketId} {
        allow read: if isOwner(request.resource.data.userId) || isRole('admin');
        allow create: if isAuth();
    }
  }
}
